let warpper;

let chat_body = new Array();
let codeClipboard;
let chatClipboard;
let warpperHeight;
//var Inpoutfield;
let bubbleDic = new Array();
let model_list = {};
let scene_list = {};

const HostObject = window.chrome.webview.hostObjects.HostObject;
const openai_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="51.2 51.2 409.6 409.6"><path xmlns="http://www.w3.org/2000/svg" fill="#fff" fill-rule="nonzero" d="M378.68 230.011a71.432 71.432 0 003.654-22.541 71.383 71.383 0 00-9.783-36.064c-12.871-22.404-36.747-36.236-62.587-36.236a72.31 72.31 0 00-15.145 1.604 71.362 71.362 0 00-53.37-23.991h-.453l-.17.001c-31.297 0-59.052 20.195-68.673 49.967a71.372 71.372 0 00-47.709 34.618 72.224 72.224 0 00-9.755 36.226 72.204 72.204 0 0018.628 48.395 71.395 71.395 0 00-3.655 22.541 71.388 71.388 0 009.783 36.064 72.187 72.187 0 0077.728 34.631 71.375 71.375 0 0053.374 23.992H271l.184-.001c31.314 0 59.06-20.196 68.681-49.995a71.384 71.384 0 0047.71-34.619 72.107 72.107 0 009.736-36.194 72.201 72.201 0 00-18.628-48.394l-.003-.004zM271.018 380.492h-.074a53.576 53.576 0 01-34.287-12.423 44.928 44.928 0 001.694-.96l57.032-32.943a9.278 9.278 0 004.688-8.06v-80.459l24.106 13.919a.859.859 0 01.469.661v66.586c-.033 29.604-24.022 53.619-53.628 53.679zm-115.329-49.257a53.563 53.563 0 01-7.196-26.798c0-3.069.268-6.146.79-9.17.424.254 1.164.706 1.695 1.011l57.032 32.943a9.289 9.289 0 009.37-.002l69.63-40.205v27.839l.001.048a.864.864 0 01-.345.691l-57.654 33.288a53.791 53.791 0 01-26.817 7.17 53.746 53.746 0 01-46.506-26.818v.003zm-15.004-124.506a53.5 53.5 0 0127.941-23.534c0 .491-.028 1.361-.028 1.965v65.887l-.001.054a9.27 9.27 0 004.681 8.053l69.63 40.199-24.105 13.919a.864.864 0 01-.813.074l-57.66-33.316a53.746 53.746 0 01-26.805-46.5 53.787 53.787 0 017.163-26.798l-.003-.003zm198.055 46.089l-69.63-40.204 24.106-13.914a.863.863 0 01.813-.074l57.659 33.288a53.71 53.71 0 0126.835 46.491c0 22.489-14.033 42.612-35.133 50.379v-67.857c.003-.025.003-.051.003-.076a9.265 9.265 0 00-4.653-8.033zm23.993-36.111a81.919 81.919 0 00-1.694-1.01l-57.032-32.944a9.31 9.31 0 00-4.684-1.266 9.31 9.31 0 00-4.684 1.266l-69.631 40.205v-27.839l-.001-.048c0-.272.129-.528.346-.691l57.654-33.26a53.696 53.696 0 0126.816-7.177c29.644 0 53.684 24.04 53.684 53.684a53.91 53.91 0 01-.774 9.077v.003zm-150.831 49.618l-24.111-13.919a.859.859 0 01-.469-.661v-66.587c.013-29.628 24.053-53.648 53.684-53.648a53.719 53.719 0 0134.349 12.426c-.434.237-1.191.655-1.694.96l-57.032 32.943a9.272 9.272 0 00-4.687 8.057v.053l-.04 80.376zm13.095-28.233l31.012-17.912 31.012 17.9v35.812l-31.012 17.901-31.012-17.901v-35.8z"/></svg>';
const user_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="-3.2 -3.2 38.4 38.4"><path d="M16 5C12.144531 5 9 8.144531 9 12C9 14.410156 10.230469 16.550781 12.09375 17.8125C8.527344 19.34375 6 22.882813 6 27L8 27C8 22.570313 11.570313 19 16 19C20.429688 19 24 22.570313 24 27L26 27C26 22.882813 23.472656 19.34375 19.90625 17.8125C21.769531 16.550781 23 14.410156 23 12C23 8.144531 19.855469 5 16 5 Z M 16 7C18.773438 7 21 9.226563 21 12C21 14.773438 18.773438 17 16 17C13.226563 17 11 14.773438 11 12C11 9.226563 13.226563 7 16 7Z" fill="#FFFFFF" /></svg>'
const copy_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M4 4L4 24L11 24L11 22L6 22L6 6L18 6L18 7L20 7L20 4 Z M 12 8L12 28L28 28L28 8 Z M 14 10L26 10L26 26L14 26Z" fill="#FFFFFF" /></svg>';
const image_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M3 6L3 26L29 26L29 6 Z M 5 8L27 8L27 21.5625L19.21875 13.78125L18.5 13.09375L17.78125 13.78125L15.5 16.0625L11.71875 12.28125L11 11.59375L10.28125 12.28125L5 17.5625 Z M 22.5 9C21.132813 9 20 10.132813 20 11.5C20 12.867188 21.132813 14 22.5 14C23.867188 14 25 12.867188 25 11.5C25 10.132813 23.867188 9 22.5 9 Z M 22.5 11C22.789063 11 23 11.210938 23 11.5C23 11.789063 22.789063 12 22.5 12C22.210938 12 22 11.789063 22 11.5C22 11.210938 22.210938 11 22.5 11 Z M 11 14.4375L14.0625 17.5L7.5625 24L5 24L5 20.4375 Z M 18.5 15.9375L26.5625 24L10.4375 24Z" fill="#FFFFFF" /></svg>';
const delete_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M7.21875 5.78125L5.78125 7.21875L14.5625 16L5.78125 24.78125L7.21875 26.21875L16 17.4375L24.78125 26.21875L26.21875 24.78125L17.4375 16L26.21875 7.21875L24.78125 5.78125L16 14.5625Z" fill="#FFFFFF" /></svg>';
const download_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M15 4L15 20.5625L9.71875 15.28125L8.28125 16.71875L15.28125 23.71875L16 24.40625L16.71875 23.71875L23.71875 16.71875L22.28125 15.28125L17 20.5625L17 4 Z M 7 26L7 28L25 28L25 26Z" fill="#FFFFFF" /></svg>';
const regenerate_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M16 3C8.832031 3 3 8.832031 3 16C3 23.167969 8.832031 29 16 29C23.167969 29 29 23.167969 29 16L27 16C27 22.085938 22.085938 27 16 27C9.914063 27 5 22.085938 5 16C5 9.914063 9.914063 5 16 5C19.875 5 23.261719 6.984375 25.21875 10L20 10L20 12L28 12L28 4L26 4L26 7.71875C23.617188 4.84375 20.019531 3 16 3Z" fill="#FFFFFF" /></svg>';
const leonardo_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M16 4C9.382813 4 4 9.382813 4 16C4 22.617188 9.382813 28 16 28C22.617188 28 28 22.617188 28 16C28 9.382813 22.617188 4 16 4 Z M 16 6C21.535156 6 26 10.464844 26 16C26 19.117188 24.601563 21.914063 22.375 23.75L19 18.6875L19 14.46875L23.625 10.78125L22.375 9.21875L17.65625 13L14.34375 13L9.625 9.21875L8.375 10.78125L13 14.46875L13 18.6875L9.625 23.71875C7.402344 21.886719 6 19.113281 6 16C6 10.464844 10.464844 6 16 6 Z M 16 8C14.894531 8 14 8.894531 14 10C14 11.105469 14.894531 12 16 12C17.105469 12 18 11.105469 18 10C18 8.894531 17.105469 8 16 8 Z M 7 13L7 15L11.75 15L9.15625 13 Z M 22.84375 13L20.25 15L25 15L25 13 Z M 15 15L17 15L17 19.3125L17.15625 19.5625L20.6875 24.84375C20.152344 25.128906 19.589844 25.378906 19 25.5625L19 24.53125L17 21.6875L17 25.9375C16.671875 25.96875 16.335938 26 16 26C15.664063 26 15.328125 25.96875 15 25.9375L15 21.6875L13 24.53125L13 25.5625C12.414063 25.378906 11.847656 25.09375 11.3125 24.8125L14.84375 19.5625L15 19.3125Z" fill="#FFFFFF" /></svg>';
const error_image_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M2.7070312 2.2929688L1.2929688 3.7070312L27.292969 29.707031L28.707031 28.292969L26.414062 26L29 26L29 6L6.4140625 6L2.7070312 2.2929688 z M 8.4140625 8L27 8L27 20.585938L21 14.585938L18 17.585938L8.4140625 8 z M 3 8.234375L3 26L20.765625 26L18.765625 24L14.414062 24L16.589844 21.824219L15.175781 20.410156L14 21.585938L9 16.585938L5 20.585938L5 10.234375L3 8.234375 z M 23.5 10 A 1.5 1.5 0 0 0 23.5 13 A 1.5 1.5 0 0 0 23.5 10 z M 21 17.414062L27 23.414062L27 24L24.414062 24L19.414062 19L21 17.414062 z M 9 19.414062L12.585938 23L11.585938 24L5 24L5 23.414062L9 19.414062 z" fill="#FFFFFF" /></svg>';
const upscale_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M4 4L4 13L6 13L6 7.4375L14.5625 16L6 24.5625L6 19L4 19L4 28L13 28L13 26L7.4375 26L16 17.4375L24.5625 26L19 26L19 28L28 28L28 19L26 19L26 24.5625L17.4375 16L26 7.4375L26 13L28 13L28 4L19 4L19 6L24.5625 6L16 14.5625L7.4375 6L13 6L13 4Z" fill="#FFFFFF" /></svg>';
const openpage_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M18 5L18 7L23.5625 7L11.28125 19.28125L12.71875 20.71875L25 8.4375L25 14L27 14L27 5 Z M 5 9L5 27L23 27L23 14L21 16L21 25L7 25L7 11L16 11L18 9Z" fill="#FFFFFF" /></svg>';
const empty_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M2 5L2 27L30 27L30 5 Z M 4 7L28 7L28 20.90625L22.71875 15.59375L22 14.875L17.46875 19.40625L11.71875 13.59375L11 12.875L4 19.875 Z M 24 9C22.894531 9 22 9.894531 22 11C22 12.105469 22.894531 13 24 13C25.105469 13 26 12.105469 26 11C26 9.894531 25.105469 9 24 9 Z M 11 15.71875L20.1875 25L4 25L4 22.71875 Z M 22 17.71875L28 23.71875L28 25L23.03125 25L18.875 20.8125Z" fill="#FFFFFF" /></svg>';
const expand_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="-300 5 632 32"><path d="M6 14C4.894531 14 4 14.894531 4 16C4 17.105469 4.894531 18 6 18C7.105469 18 8 17.105469 8 16C8 14.894531 7.105469 14 6 14 Z M 16 14C14.894531 14 14 14.894531 14 16C14 17.105469 14.894531 18 16 18C17.105469 18 18 17.105469 18 16C18 14.894531 17.105469 14 16 14 Z M 26 14C24.894531 14 24 14.894531 24 16C24 17.105469 24.894531 18 26 18C27.105469 18 28 17.105469 28 16C28 14.894531 27.105469 14 26 14Z" fill="#FFFFFF" /></svg>';
const generate_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M22.994141 4.5371094L16.904297 16.21875C16.013715 16.419194 15.154361 16.775326 14.464844 17.464844L14.441406 17.486328L14.417969 17.511719C13.432305 18.63678 13.101605 20.096634 12.566406 21.634766C12.070249 23.060696 11.401641 24.563798 10.251953 26L3 26L3 28L11.779297 28L11.779297 27.927734C17.172815 27.744154 19.883221 26.258119 21.539062 24.529297C22.753611 23.311212 23.116897 21.624292 22.808594 20.044922L29.970703 6.4667969L28.201172 5.5332031L24.080078 13.349609L21.4375 11.851562L24.767578 5.4628906L22.994141 4.5371094 z M 20.511719 13.626953L23.146484 15.119141L21.744141 17.779297C21.660291 17.681247 21.627846 17.557533 21.535156 17.464844C20.861064 16.790752 20.02292 16.437125 19.154297 16.230469L20.511719 13.626953 z M 18 17.994141C18.765753 17.994141 19.531206 18.289018 20.121094 18.878906C21.30087 20.058682 21.30087 21.941318 20.121094 23.121094L20.113281 23.128906L20.105469 23.136719C18.822919 24.479437 16.972775 25.596298 12.71875 25.878906C13.481498 24.626983 14.074274 23.385425 14.455078 22.291016C15.010616 20.694431 15.416133 19.445991 15.908203 18.867188C16.494698 18.293409 17.24476 17.994141 18 17.994141 z" fill="#FFFFFF" /></svg>';
const translate_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M4 4L4 22L10 22L10 28L28 28L28 10L22 10L22 4 Z M 6 6L20 6L20 10.5625L10.5625 20L6 20 Z M 11 8L11 9L8 9L8 11L12.9375 11C12.808594 12.148438 12.457031 13.054688 11.875 13.6875C11.53125 13.574219 11.222656 13.433594 10.96875 13.28125C10.265625 12.863281 10 12.417969 10 12L8 12C8 13.191406 8.734375 14.183594 9.71875 14.84375C9.226563 14.949219 8.65625 15 8 15L8 17C9.773438 17 11.25 16.59375 12.375 15.84375C12.898438 15.933594 13.429688 16 14 16L14 14.125C14.542969 13.214844 14.832031 12.152344 14.9375 11L16 11L16 9L13 9L13 8 Z M 21.4375 12L26 12L26 26L12 26L12 21.4375 Z M 20 13.84375L19.0625 16.6875L17.0625 22.6875L17 22.84375L17 24L19 24L19 23.125L19.03125 23L20.96875 23L21 23.125L21 24L23 24L23 22.84375L22.9375 22.6875L20.9375 16.6875 Z M 20 20.125L20.28125 21L19.71875 21Z" fill="#FFFFFF" /></svg>';
const busy_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M7 4L7 6L9 6L9 10C9 12.542969 10.367188 14.773438 12.40625 16C10.367188 17.226563 9 19.457031 9 22L9 26L7 26L7 28L25 28L25 26L23 26L23 22C23 19.457031 21.632813 17.226563 19.59375 16C21.632813 14.773438 23 12.542969 23 10L23 6L25 6L25 4 Z M 11 6L21 6L21 10C21 12.773438 18.773438 15 16 15C13.226563 15 11 12.773438 11 10 Z M 16 17C18.773438 17 21 19.226563 21 22L21 26L20 26L20 24C20 21.789063 18.210938 20 16 20C13.789063 20 12 21.789063 12 24L12 26L11 26L11 22C11 19.226563 13.226563 17 16 17Z" fill="#FFFFFF" /></svg>';
const magic_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M20.875 2.5625L20.1875 3.3125L18.5 5.09375L14.90625 5.09375L14.90625 8.59375L13.1875 10.40625L12.5 11.125L14.6875 13.3125L3.03125 25L2.3125 25.71875L3.03125 26.40625L6.3125 29.6875L7 28.96875L18.6875 17.3125L20.875 19.5L21.59375 18.8125L23.40625 17.09375L26.90625 17.09375L26.90625 13.5L28.6875 11.8125L29.4375 11.125L26.90625 8.59375L26.90625 5.09375L23.40625 5.09375 Z M 20.90625 5.4375L22.28125 6.8125L22.59375 7.09375L24.90625 7.09375L24.90625 9.40625L25.1875 9.71875L26.5625 11.09375L25.21875 12.375L24.90625 12.65625L24.90625 15.09375L22.59375 15.09375L22.3125 15.375L20.90625 16.71875L20.09375 15.90625L24.625 11.375L20.65625 7.40625L19.9375 8.09375L16.125 11.9375L15.28125 11.09375L16.625 9.6875L16.90625 9.40625L16.90625 7.09375L19.34375 7.09375L19.625 6.78125 Z M 20.65625 10.21875L21.78125 11.375L6.3125 26.875L5.15625 25.71875 Z M 19 21L19 22L18 22L18 24L19 24L19 25L21 25L21 24L22 24L22 22L21 22L21 21 Z M 25 23L25 25L23 25L23 27L25 27L25 29L27 29L27 27L29 27L29 25L27 25L27 23Z" fill="#FFFFFF" /></svg>';
const dropdown_svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M4.21875 10.78125L2.78125 12.21875L15.28125 24.71875L16 25.40625L16.71875 24.71875L29.21875 12.21875L27.78125 10.78125L16 22.5625Z" fill="#FFFFFF" /></svg>';
const upload_svvg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M16 3.59375L15.28125 4.28125L8.28125 11.28125L9.71875 12.71875L15 7.4375L15 24L17 24L17 7.4375L22.28125 12.71875L23.71875 11.28125L16.71875 4.28125 Z M 7 26L7 28L25 28L25 26Z" fill="#FFFFFF" /></svg>';

window.addEventListener('contextmenu', window => { window.preventDefault(); });
window.addEventListener('dragover', function (e) { e.preventDefault(); }, false);
window.addEventListener('drop', function (e) { e.preventDefault(); }, false);

LastWarpperHeight = undefined;
window.onresize = function (e) {
    warpperHeight = warpper.clientHeight;
    if (!LastWarpperHeight)
        LastWarpperHeight = warpperHeight
    for (var key in chat_body) {
        let scrollTop = chat_body[key].scrollTop;
        chat_body[key].scrollTo({
            top: scrollTop + LastWarpperHeight - warpperHeight,
            behavior: "smooth"
        });
    }
    LastWarpperHeight = warpperHeight;
}
window.onload = function () {
    document.onkeydown = function (event) {
        let key = event.keyCode;
        if (key == 116) {
            //禁用F5刷新
            return false;
        } else if (key == 27) {
            //禁用esc键
            return false;
        } else if (event.ctrlKey && key == 82) {
            //禁用ctrl+R刷新
            return false;
        }
    };

    warpper = document.getElementById('warpper');
    window.requestAnimationFrame(function (time) {
        window.requestAnimationFrame(function (time) {
            warpperHeight = warpper.clientHeight;
        });
    });

    codeClipboard = new ClipboardJS('.codeCopyBtn', {
        target: function (trigger) {
            return trigger.parentElement.firstElementChild;
        }
    });

    codeClipboard.on('success', function (e) {
        e.trigger.parentElement.classList = [];
        window.requestAnimationFrame(function (time) {
            window.requestAnimationFrame(function (time) {
                e.trigger.parentElement.classList.add('hljsCopied');
            });
        });
        e.clearSelection();
    });
};
function SetModelList(modelList) {
    console.log(modelList);
    model_list = modelList;
}
function SetSceneList(sceneList) {
    console.log(sceneList);
    scene_list = sceneList;
}
function CreatChatBubble(id, chatID, role) {
    hideWelcomeScreen(chatID);
    bubbleDic[id] = new chatBubble(id, chatID, role);
    chat_body[chatID].appendChild(bubbleDic[id].div);
    console.log(bubbleDic[id].div);
    RefreshScroll(bubbleDic[id].div, chatID, true, "bottom");
}
function CreatLeonardoBubble(id, chatID, request, isactive) {
    hideWelcomeScreen(chatID);
    bubbleDic[id] = new leonardoBubble(id, chatID, request, isactive);
    chat_body[chatID].appendChild(bubbleDic[id].div);
    console.log(bubbleDic[id].div);
    RefreshScroll(bubbleDic[id].div, chatID, true, "bottom");
}
function UpdateBubble(data) {
    let id = data['ID'];
    if (bubbleDic[id] != undefined)
        bubbleDic[id].update(data);
}

function CreatChatBody(chatID) {
    let newChatBody = document.createElement('div');
    newChatBody.className = 'chatBody';
    warpper.appendChild(newChatBody);
    chat_body[chatID] = newChatBody;
    let welcomeScreen = document.createElement('div');
    welcomeScreen.className = 'welcomeScreen';

    for (var key in scene_list) {
        let btn = document.createElement('div');
        btn.classList.add('select');
        btn.innerText = scene_list[key].name;
        let icon = document.createElement('div');
        icon.classList.add('icon');
        if (scene_list[key].color != undefined)
            icon.style.backgroundColor = scene_list[key].color;
        btn.appendChild(icon);
        let mykey = key;
        btn.addEventListener('click', async (e) => {
            await HostObject.setSystemMessage(chatID, mykey);
            hideWelcomeScreen(chatID);
        });
        welcomeScreen.appendChild(btn);
    }

    newChatBody.appendChild(welcomeScreen);
}
function RemoveChatBody(chatID) {
    DeleteConversation(chatID);
    warpper.removeChild(chat_body[chatID]);
    chat_body[chatID] = undefined;
    delete (chat_body[chatID]);
}
function DeleteConversation(chatID) {
    for (let key in bubbleDic)
        if (bubbleDic[key] != undefined)
            if (bubbleDic[key].chatID == chatID)
                bubbleDic[key].deleteBubble();
}
function GotoPage(chatID) {
    let index = 0;
    for (var key in chat_body) {
        if (key == chatID)
            break;
        index++;
    }
    warpper.style.transform = `translateX(${-100.0 * index / Object.keys(chat_body).length}%)`;
}
function Show() {
    document.getElementById('mainBody').className = '';
    window.requestAnimationFrame(function (time) {
        window.requestAnimationFrame(function (time) {
            document.getElementById('mainBody').className = 'show';
        });
    });

}
function RefreshScroll(targetDiv, chatID, smooth, witchSide) {
    let targetTop = targetDiv.offsetTop - 15;
    let targetBottom = targetDiv.offsetTop + targetDiv.getBoundingClientRect().height + 50;
    let scrollTop = chat_body[chatID].scrollTop;
    let scrollBottom = chat_body[chatID].scrollTop + warpperHeight;
    let topInside = scrollTop < targetTop;
    let buttonInside = scrollBottom > targetBottom;
    switch (witchSide) {
        case "top":
            if (!topInside)
                chat_body[chatID].scrollTo({
                    top: targetTop,
                    behavior: smooth ? "smooth" : "instant",
                });
            break;
        case "bottom":
            if (!buttonInside)
                chat_body[chatID].scrollTo({
                    top: targetBottom - warpperHeight,
                    behavior: smooth ? "smooth" : "instant",
                });
            break;
        case "both":
            if (!buttonInside || !topInside) {
                let topDis = scrollTop - targetTop;
                let bottomDis = targetBottom - scrollBottom;
                if (topDis > bottomDis)
                    chat_body[chatID].scrollTo({
                        top: targetTop,
                        behavior: smooth ? "smooth" : "instant",
                    });
                else
                    chat_body[chatID].scrollTo({
                        top: targetBottom - warpperHeight,
                        behavior: smooth ? "smooth" : "instant",
                    });
            }
            break;
    }
}
function RefreshScrollBubble(ID) {
    if (bubbleDic[id] != undefined)
        RefreshScroll(bubbleDic[ID].div, bubbleDic[ID].chatID, true, 'top');
}
function hideWelcomeScreen(chatID) {
    let welcomeScreen = chat_body[chatID].querySelector('.welcomeScreen');
    addClass(welcomeScreen, 'hide');
}
function addClass(element, className) {
    if (!element.classList.contains(className))
        element.classList.add(className);
}